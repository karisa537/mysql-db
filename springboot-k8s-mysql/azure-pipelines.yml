# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
variables:
 vmImage: 'ubuntu-latest'
 image_tag: $(Build.BuildNumber)
 projectName: 'Test Project'
trigger:
- none

pool:
  vmImage: $(vmImage)

stages:
  - stage: Build
    displayName: Building project $(projectName)
    jobs:
      - job: MavenBuild
        displayName: Mave Build
        steps:
         - task: JavaToolInstaller@0
           inputs:
              versionSpec: '17'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'
         - task: Maven@3
           inputs:
              mavenPomFile: 'pom.xml'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false
              sqMavenPluginVersionChoice: 'latest'
              checkStyleRunAnalysis: true
              findBugsRunAnalysis: true
          
         - task: CopyFiles@2
           displayName: copying files form source directory
           inputs:
              contents: 'target/*.jar'
              CleanTargetFolder: true
              TargetFolder: $(build.artifactstagingdirectory)
              OverWrite: true
              retryCount: '5'
              preserveTimestamp: true
              delayBetweenRetries: true

         - task: Docker@2
           displayName: Docker login
           inputs:
            command: login
            containerRegistry: 'dockerRegistry'
         - task: Docker@2
           inputs:
            command: build
            repository: jkalume/kari-git-images
            Dockerfile: 'Dockerfile'
            tags: $(image_tag)

         - task: Bash@3
           displayName: List existing images
           inputs:
            targetType: inline
            script: |
             docker image ls
         - task: Bash@3
           displayName: Pushing image $(image_tag) to registry
           inputs:
            targetType: inline
            script: |
             docker push jkalume/kari-git-images:$(image_tag)
  
  - stage: Deployment
    dependsOn: Build
    displayName: Deplyoying the image to Dev Environment
    jobs:
     - job: Deployment
       steps:
         - task: Bash@3
           displayName: Prepare Kubernetes Cluster
           inputs:
             targetType: inline
             script: |
              minikube start --driver=docker
         - task: Bash@3
           displayName: View the *.yml files under the deployment folder
           inputs:
             targetType: inline
             script: |
              cd $(Build.SourcesDirectory)/ocp
              cat $(Build.SourcesDirectory)/ocp/*
         - task: Bash@3
           displayName: Apply deployments
           inputs:
            targetType: inline
            script: |
              kubectl delete -f .
              kubectl apply -f $(Build.SourcesDirectory)/ocp       
